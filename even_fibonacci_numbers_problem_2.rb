# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

max_value = 4000000
t = Time.now
a = [1,2]
sum = a[1]
while a[1] <= max_value
	n = a[0]
	a[0] = a[1]
	a[1] += n
	sum += a[1] if a[1] % 2 == 0
end

p sum
p "took: #{(Time.now - t)*1000000} micro secs"
# "took: 63.0 micro secs"

max_value = 4000000
t = Time.now
a = b = 1
sum = 0
while(b <= max_value)
	sum += (a+b)
	a,b = a + 2*b, 2*a + 3*b
end
p sum
p "took: #{(Time.now - t)*1000000} micro secs"
# "took: 7.0 micro secs"

